// <auto-generated />
using System;
using Lucilvio.Ticket.Infra.RepositoriosEf;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lucilvio.Ticket.Infra.RepositoriosEf.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20190408212358_operador-email")]
    partial class operadoremail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lucilvio.Ticket.Dominio.Chamados.Chamado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId");

                    b.Property<DateTime>("DataDaAbertura");

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Chamados");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Dominio.Chamados.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<int>("IdChamado");

                    b.Property<int?>("OperadorId");

                    b.Property<string>("Texto")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("IdChamado");

                    b.HasIndex("OperadorId");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Dominio.Clientes.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasMaxLength(256);

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Dominio.Operadores.Operador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDoCadastro");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("Nome")
                        .HasMaxLength(256);

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Operadores");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Dominio.Usuarios.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Dominio.Chamados.Chamado", b =>
                {
                    b.HasOne("Lucilvio.Ticket.Dominio.Clientes.Cliente", "Cliente")
                        .WithMany("Chamados")
                        .HasForeignKey("ClienteId");

                    b.OwnsOne("Lucilvio.Ticket.Dominio.Chamados.Protocolo", "Protocolo", b1 =>
                        {
                            b1.Property<int>("ChamadoId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Valor")
                                .HasColumnName("Protocolo");

                            b1.HasKey("ChamadoId");

                            b1.ToTable("Chamados");

                            b1.HasOne("Lucilvio.Ticket.Dominio.Chamados.Chamado")
                                .WithOne("Protocolo")
                                .HasForeignKey("Lucilvio.Ticket.Dominio.Chamados.Protocolo", "ChamadoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Lucilvio.Ticket.Dominio.Chamados.Resposta", b =>
                {
                    b.HasOne("Lucilvio.Ticket.Dominio.Chamados.Chamado", "Chamado")
                        .WithMany("Respostas")
                        .HasForeignKey("IdChamado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lucilvio.Ticket.Dominio.Operadores.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("OperadorId");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Dominio.Clientes.Cliente", b =>
                {
                    b.HasOne("Lucilvio.Ticket.Dominio.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Dominio.Operadores.Operador", b =>
                {
                    b.HasOne("Lucilvio.Ticket.Dominio.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
