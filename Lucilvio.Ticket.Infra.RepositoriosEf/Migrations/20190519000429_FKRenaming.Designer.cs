// <auto-generated />
using System;
using Lucilvio.Ticket.Infra.RepositoriosEf;
using Lucilvio.Ticket.Infra.RepositoriosEf.Comum;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lucilvio.Ticket.Infra.RepositoriosEf.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20190519000429_FKRenaming")]
    partial class FKRenaming
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDeResposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChamadoId");

                    b.Property<DateTime>("Data");

                    b.Property<int?>("OperadorId");

                    b.Property<string>("Texto")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.HasIndex("ChamadoId");

                    b.HasIndex("OperadorId");

                    b.ToTable("RespostasDosChamados");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDoChamado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId");

                    b.Property<DateTime>("DataDaAbertura");

                    b.Property<string>("Descricao")
                        .HasMaxLength(2048);

                    b.Property<int>("Protocolo");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Chamados");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDoCadastro");

                    b.Property<string>("Email")
                        .HasMaxLength(512);

                    b.Property<string>("Nome")
                        .HasMaxLength(512);

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDoContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DadosDoClienteId");

                    b.Property<int>("Tipo");

                    b.Property<string>("Valor")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("DadosDoClienteId");

                    b.ToTable("ContatosDeClientes");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDoOperador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataDoCadastro");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Operadores");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataDoCadastro");

                    b.Property<string>("Email")
                        .HasMaxLength(512);

                    b.Property<string>("Login")
                        .HasMaxLength(512);

                    b.Property<string>("Nome")
                        .HasMaxLength(512);

                    b.Property<int>("Perfil");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDeResposta", b =>
                {
                    b.HasOne("Lucilvio.Ticket.Infra.Dados.DadosDoChamado", "Chamado")
                        .WithMany("Respostas")
                        .HasForeignKey("ChamadoId");

                    b.HasOne("Lucilvio.Ticket.Infra.Dados.DadosDoOperador", "Operador")
                        .WithMany()
                        .HasForeignKey("OperadorId");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDoChamado", b =>
                {
                    b.HasOne("Lucilvio.Ticket.Infra.Dados.DadosDoCliente", "Cliente")
                        .WithMany("Chamados")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDoCliente", b =>
                {
                    b.HasOne("Lucilvio.Ticket.Infra.Dados.DadosDoUsuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDoContato", b =>
                {
                    b.HasOne("Lucilvio.Ticket.Infra.Dados.DadosDoCliente")
                        .WithMany("Contatos")
                        .HasForeignKey("DadosDoClienteId");
                });

            modelBuilder.Entity("Lucilvio.Ticket.Infra.Dados.DadosDoOperador", b =>
                {
                    b.HasOne("Lucilvio.Ticket.Infra.Dados.DadosDoUsuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
